"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список только числами.
Класс-исключение должен контролировать типы данных элементов списка.
"""
# По-моему, ТЗ составлено некорректно, особенно если смотреть также версию в методичке:
# - класс-исключение должен проверять то ли список, то ли число
# - я так понял, что класс-исключение описывает поведение в случае выполнения некоего условия,
# а не проверяет ничего сам на выполнение условия

test_list_1 = [1, 2, -10, 0, 3.3]
test_list_2 = ['qq', 2, -10, 0, 3.3]

result_list = []


class IsNotNumberException(Exception):
    def __str__(self):
        return 'Введенное значение не является числом'


while True:
    sign = 1
    number = input('Введите число для занесения в список, "stop" для завершения: ')
    if number == 'stop':
        break

    try:
        if number[0] == '-':
            sign = -1
            number = number.replace('-', '')

        if number.isdigit():
            number = float(number) * sign
            result_list.append(number)
        else:
            raise IsNotNumberException

    except IsNotNumberException as err:
        print(err)

print(f'Сформирован следующий список: {result_list}')
